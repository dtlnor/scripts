#!/usr/local/bin/py

from subprocess import Popen, PIPE, call
import time
import os
from os.path import expanduser
import sys
import struct

import pyperclip
import requests

pyperclip.set_clipboard('xclip')

with open(expanduser('~/.screenshot-area'), encoding='utf-8') as f:
    config = f.read().splitlines()

UPLOAD_FORM = config[0]
LOCAL_PATH = expanduser('~/Pictures/screenshots/')

def do_screenshot():
    # bug workaround
    time.sleep(0.2)

    grab_time = time.strftime('%Y-%m-%d_%H-%M-%S')
    file_name = f'{grab_time}.png'
    thumbnail_name = f'{grab_time}-thumb.png'
    file_path = os.path.join(LOCAL_PATH, file_name)
    thumbnail_path = os.path.join(LOCAL_PATH, thumbnail_name)

    slop = Popen(['slop'], stdout=PIPE)
    area, _ = slop.communicate()
    if slop.returncode != 0:
        sys.exit(slop.returncode)
    area = area.decode('utf-8').strip()

    call(['import', '-window', 'root', '-crop', area, file_path])

    file_handle = open(file_path, 'rb')
    png_resolution_bytes = file_handle.read(24)[16:24]
    png_w, png_h = struct.unpack('>ii', png_resolution_bytes)

    notification_image_path = file_path
    if png_w > 350:
        call(['convert', file_path, '-resize', '350', thumbnail_path])
        notification_image_path = thumbnail_path

    file_handle.seek(0)
    post_response = requests.post(UPLOAD_FORM, files={'file': file_handle}, allow_redirects=False)
    file_handle.close()
    file_url = post_response.headers['location']

    call(['notify-send', '-i', notification_image_path, ' '])
    pyperclip.copy(file_url)
    pyperclip.copy(file_url, primary=True)

    time.sleep(5)

    try:
        os.remove(thumbnail_path)
    except FileNotFoundError:
        pass

def main():
    do_screenshot()

if __name__ == '__main__':
    main()
